<?php

							/*-----------------------------------------------------------------------*/
							/*  						класс цветовой палитры 						 */
							/* Данный класс используется когда необходимо получить произвольный цвет */
							/* который ранее не повторялся. Цвет не будет повторятся до тех пр пока  */
							/* в массиве цветов остаются элементы.									 */
							/* 	 											v0.1	02.10.2014		 */
							/*-----------------------------------------------------------------------*/

class GetNewColor
{

//идентификатор цвета
private static $array_numDescriptor = array();

//получаем цвета для круговой диаграммы
public function getColorForPie()
	{
	$array = $this->theColorPalette();
	$numRandom = $this->getRandomColor();
	if(strlen($numRandom) == 2){
		$color_1 =  $array[substr($numRandom, 0, 1)][substr($numRandom, -1)];
		$color_2 = $array[substr($numRandom, 0, 1)][(substr($numRandom, -1) + 1)];
		} else {
		$color_1 =  $array[substr($numRandom, 0, 2)][substr($numRandom, -1)];
		$color_2 = $array[substr($numRandom, 0, 2)][(substr($numRandom, -1) + 1)];
		}
	return $color_1.','.$color_2;
	}

//получаем произвольный цвет (для графиков и диаграмм)
private function getRandomColor()
	{
	//генерируем случайное число для первого ключа массива
	$numRandom_1 = (mt_rand(1, 53) + 17);
	//генерируем случайное число для второго ключа массива
	$numRandom_2 = mt_rand(0, 1);
	while(true){
		if(in_array($numRandom_1.$numRandom_2, self::$array_numDescriptor)){
			$numRandom_1 = mt_rand(1, 70);
			$numRandom_2 = mt_rand(0, 1);
			continue;
			} else {
			$num = count(self::$array_numDescriptor) + 1;
			self::$array_numDescriptor[$num] = $numRandom_1.$numRandom_2;
			return $numRandom_1.$numRandom_2;
			}
		}
	}

//цветовая палитра
private function theColorPalette()
	{
	//массив цветовых схем
	return $array = array(
					'0' => array('0' => '#000000', '1' => '#000033', '2' => '#000066'),
					'1' => array('0' => '#000099', '1' => '#0000CC', '2' => '#0000FF'),
					'2' => array('0' => '#003300', '1' => '#003333', '2' => '#003366'),
					'3' => array('0' => '#003399', '1' => '#0033CC', '2' => '#0033FF'),
					'4' => array('0' => '#006600', '1' => '#006633', '2' => '#006666'),
					'5' => array('0' => '#006699', '1' => '#0066CC', '2' => '#0066FF'),
					'6' => array('0' => '#009900', '1' => '#009933', '2' => '#009966'),
					'7' => array('0' => '#009999', '1' => '#0099CC', '2' => '#0099FF'),
					'8' => array('0' => '#00CC00', '1' => '#00CC33', '2' => '#00CC66'),
					'9' => array('0' => '#00CC99', '1' => '#00CCCC', '2' => '#00CCFF'),
					'10' => array('0' => '#00FF00', '1' => '#00FF33', '2' => '#00FF66'),
					'11' => array('0' => '#00FF99', '1' => '#00FFCC', '2' => '#00FFFF'),
					'12' => array('0' => '#330000', '1' => '#330033', '2' => '#330066'),
					'13' => array('0' => '#330099', '1' => '#3300CC', '2' => '#3300FF'),
					'14' => array('0' => '#333300', '1' => '#333333', '2' => '#333366'),
					'15' => array('0' => '#333399', '1' => '#3333CC', '2' => '#3333FF'),
					'16' => array('0' => '#336600', '1' => '#336633', '2' => '#336666'),
					'17' => array('0' => '#336699', '1' => '#3366CC', '2' => '#3366FF'),
					'18' => array('0' => '#339900', '1' => '#339933', '2' => '#339966'),
					'19' => array('0' => '#339999', '1' => '#3399CC', '2' => '#3399FF'),
					'20' => array('0' => '#33CC00', '1' => '#33CC33', '2' => '#33CC66'),
					'21' => array('0' => '#33CC99', '1' => '#33CCCC', '2' => '#33CCFF'),
					'22' => array('0' => '#33FF00', '1' => '#33FF33', '2' => '#33FF66'),
					'23' => array('0' => '#33FF99', '1' => '#33FFCC', '2' => '#33FFFF'),
					'24' => array('0' => '#660000', '1' => '#660033', '2' => '#660066'),
					'25' => array('0' => '#660099', '1' => '#6600CC', '2' => '#6600FF'),
					'26' => array('0' => '#663300', '1' => '#663333', '2' => '#663366'),
					'27' => array('0' => '#663399', '1' => '#6633CC', '2' => '#6633FF'),
					'28' => array('0' => '#666600', '1' => '#666633', '2' => '#666666'),
					'29' => array('0' => '#666699', '1' => '#6666CC', '2' => '#6666FF'),
					'30' => array('0' => '#669900', '1' => '#669933', '2' => '#669966'),
					'31' => array('0' => '#669999', '1' => '#6699CC', '2' => '#6699FF'),
					'32' => array('0' => '#66CC00', '1' => '#66CC33', '2' => '#66CC66'),
					'33' => array('0' => '#66CC99', '1' => '#66CCCC', '2' => '#66CCFF'),					
					'34' => array('0' => '#66FF00', '1' => '#66FF33', '2' => '#66FF66'),
					'35' => array('0' => '#66FF99', '1' => '#66FFCC', '2' => '#66FFFF'),
					'36' => array('0' => '#990000', '1' => '#990033', '2' => '#990066'),
					'37' => array('0' => '#990099', '1' => '#9900CC', '2' => '#9900FF'),
					'38' => array('0' => '#993300', '1' => '#993333', '2' => '#993366'),
					'39' => array('0' => '#993399', '1' => '#9933CC', '2' => '#9933FF'),
					'40' => array('0' => '#996600', '1' => '#996633', '2' => '#996666'),
					'41' => array('0' => '#996699', '1' => '#9966CC', '2' => '#9966FF'),
					'42' => array('0' => '#999900', '1' => '#999933', '2' => '#999966'),
					'43' => array('0' => '#999999', '1' => '#9999CC', '2' => '#9999FF'),
					'44' => array('0' => '#99CC00', '1' => '#99CC33', '2' => '#99CC66'),
					'45' => array('0' => '#99CC99', '1' => '#99CCCC', '2' => '#99CCFF'),					
					'46' => array('0' => '#99FF00', '1' => '#99FF33', '2' => '#99FF66'),
					'47' => array('0' => '#99FF99', '1' => '#99FFCC', '2' => '#99FFFF'),
					'48' => array('0' => '#CC0000', '1' => '#CC0033', '2' => '#CC0066'),
					'49' => array('0' => '#CC0099', '1' => '#CC00CC', '2' => '#CC00FF'),
					'50' => array('0' => '#CC3300', '1' => '#CC3333', '2' => '#CC3366'),
					'51' => array('0' => '#CC3399', '1' => '#CC33CC', '2' => '#CC33FF'),
					'52' => array('0' => '#CC6600', '1' => '#CC6633', '2' => '#CC6666'),
					'53' => array('0' => '#CC6699', '1' => '#CC66CC', '2' => '#CC66FF'),
					'54' => array('0' => '#CC9900', '1' => '#CC9933', '2' => '#CC9966'),
					'55' => array('0' => '#CC9999', '1' => '#CC99CC', '2' => '#CC99FF'),
					'56' => array('0' => '#CCCC00', '1' => '#CCCC33', '2' => '#CCCC66'),
					'57' => array('0' => '#CCCC99', '1' => '#CCCCCC', '2' => '#CCCCFF'),					
					'58' => array('0' => '#CCFF00', '1' => '#CCFF33', '2' => '#CCFF66'),
					'59' => array('0' => '#CCFF99', '1' => '#CCFFCC', '2' => '#CCFFFF'),
					'60' => array('0' => '#FF0000', '1' => '#FF0033', '2' => '#FF0066'),
					'61' => array('0' => '#FF0099', '1' => '#FF00CC', '2' => '#FF00FF'),
					'62' => array('0' => '#FF3300', '1' => '#FF3333', '2' => '#FF3366'),
					'63' => array('0' => '#FF3399', '1' => '#FF33CC', '2' => '#FF33FF'),
					'64' => array('0' => '#FF6600', '1' => '#FF6633', '2' => '#FF6666'),
					'65' => array('0' => '#FF6699', '1' => '#FF66CC', '2' => '#FF66FF'),
					'66' => array('0' => '#FF9900', '1' => '#FF9933', '2' => '#FF9966'),
					'67' => array('0' => '#FF9999', '1' => '#FF99CC', '2' => '#FF99FF'),
					'68' => array('0' => '#FFCC00', '1' => '#FFCC33', '2' => '#FFCC66'),
					'69' => array('0' => '#FFCC99', '1' => '#FFCCCC', '2' => '#FFCCFF'),					
					'70' => array('0' => '#FFFF00', '1' => '#FFFF33', '2' => '#FFFF66'),
					'71' => array('0' => '#FFFF99', '1' => '#FFFFCC', '2' => '#FFFFFF')
					);
	}

}
?>